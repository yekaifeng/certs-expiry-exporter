apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  generation: 4
  labels:
    app: baidu-com-expiry
    app.kubernetes.io/component: baidu-com-expiry
    app.kubernetes.io/instance: baidu-com-expiry
  name: baidu-com-expiry
  namespace: certs-expiry
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: baidu-com-expiry
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: baidu-com-expiry
    spec:
      containers:
      - env:
        - name: CHECK_HTTPS_URL
          value: https://baidu.com
        image: registry.ocp4.cn/redhat/cert-expiry-exporter:1.0
        imagePullPolicy: IfNotPresent
        name: baidu-com-expiry
        ports:
        - containerPort: 8080
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
